{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/blog/infrastrukturen-til-jokul-2022/",
    "result": {"data":{"page":{"id":"0a25fa99-f173-5696-80ec-f685cb4bf862","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Infrastrukturen til JÃ¸kul\",\n  \"author\": \"William Killerud\",\n  \"publishDate\": \"2022.03.09\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Fredag 4. mars holdt jeg en kort presentasjon om infrastrukturen til J\\xF8kul for ansatte i Fremtind. Det var en lyninnf\\xF8ring i monorepo og verkt\\xF8yene vi bruker for \\xE5 g\\xE5 fra kode p\\xE5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost\"), \" til endringen er i produksjon.\"), mdx(\"p\", null, \"Dette er en oppsummering for de som ikke fikk med seg presentasjonen \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"live\"), \". Fremtind-ansatte kan ogs\\xE5 finne et opptak av presentasjonen under Fagtimen.\"), mdx(\"p\", null, \"Her er \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.figma.com/file/tUnhcpsbsdJz1LNT0153I7/Fagtime-om-infrastrukturen-til-J%C3%B8kul?node-id=0%3A1\"\n  }, \"FigJamen jeg brukte\"), \" underveis i presentasjonen om du vil bla litt i den selv:\"), mdx(\"iframe\", {\n    style: {\n      \"border\": \"1px solid rgba(0, 0, 0, 0.1)\"\n    },\n    width: \"800\",\n    height: \"450\",\n    src: \"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FtUnhcpsbsdJz1LNT0153I7%2FFagtime-om-infrastrukturen-til-J%25C3%25B8kul%3Fnode-id%3D0%253A1\",\n    allowFullScreen: true\n  }), mdx(\"h2\", null, \"Lyninnf\\xF8ring i monorepo\"), mdx(\"p\", null, \"Koden til J\\xF8kul er organisert som et \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"monorepo\"), \" i repositoriet \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/\"\n  }, \"fremtind/jokul\"), \" p\\xE5 GitHub.\"), mdx(\"p\", null, \"Kort fortalt g\\xE5r id\\xE9en om et monorepo ut p\\xE5 at man samler flere selvstendige men relaterte prosjekter i det samme Git-repositoriet. Det gj\\xF8r det enklere \\xE5 gj\\xF8re endringer p\\xE5 tvers av disse prosjektene, men gir noen unike utfordringer.\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://monorepo.tools\"\n  }, \"Monorepo.tools\"), \" har en fin oversikt om du vil l\\xE6re litt mer.\"), mdx(\"p\", null, \"For J\\xF8kul sin del betyr det at vi har en samling med selvstendige pakker i mappen \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/tree/main/packages\"\n  }, \"packages\"), \", i tillegg til \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/tree/main/portal\"\n  }, \"portalen\"), \". Pakkene (og portalen) er organisert med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://classic.yarnpkg.com/en/docs/workspaces\"\n  }, \"Yarn workspaces\"), \" slik at pakker som avhenger av hverandre i monorepoet alltid bruker den lokale versjonen, ikke versjonen som er publisert p\\xE5 NPM. Det gj\\xF8r det mye enklere \\xE5 teste endringer.\"), mdx(\"p\", null, \"I tillegg finner du en \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/blob/main/package.json\"\n  }, \"package.json\"), \" p\\xE5 rotniv\\xE5 i repositoriet. Her samler vi avhengigheter, konfigurasjon og scripts som gjelder for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"alle\"), \" pakkene.\"), mdx(\"h2\", null, \"La oss gj\\xF8re en endring\"), mdx(\"p\", null, \"La oss f\\xF8lge en tenkt endring hvor vi legger til en ID-prop i \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"LoaderProps\"), \"-interfacet:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-tsx\"\n  }, \"export interface LoaderProps {\\n    id?: string; // Denne!\\n    className?: string;\\n}\\n\")), mdx(\"h3\", null, \"Kj\\xF8r bygg og tester\"), mdx(\"p\", null, \"N\\xE5r endringen er gjort m\\xE5 vi sjekke at vi ikke har innf\\xF8rt noen feil. Det gj\\xF8r vi ved \\xE5 kj\\xF8re \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn build\"), \" og \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn ci:test\"), \" fra \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/blob/main/package.json\"\n  }, \"rotniv\\xE5\"), \". Hva skjer da?\"), mdx(\"p\", null, \"Hver pakke har sitt eget \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"build\"), \"-script som beskriver hvordan den pakken bygges. P\\xE5 rotniv\\xE5 ber vi \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://turborepo.org\"\n  }, \"Turborepo\"), \" ta seg av kj\\xF8ringen av disse scriptene.\"), mdx(\"p\", null, \"Turborepo bygger pakker i riktig rekkef\\xF8lge, og cacher resultatet mellom bygg. Hvis en pakke ikke har noen endringer s\\xE5 kj\\xF8res heller ikke bygget. Det sparer oss for potensielt mye tid, siden et bygg av alle pakker tar et par minutter.\"), mdx(\"p\", null, \"Byggscriptene ute i pakkene ser for det meste ganske like ut.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reactpakkene bruker \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://rollupjs.org/guide/en/\"\n  }, \"Rollup\"), \" og \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://babeljs.io\"\n  }, \"Babel\"), \" for \\xE5 kompilere TypeScript til JavaScript.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Stilpakkene bruker \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://gulpjs.com\"\n  }, \"Gulp\"), \" for \\xE5 kompilere \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://sass-lang.com\"\n  }, \"Sass\"), \" til CSS\")), mdx(\"p\", null, \"Enhetstesting gj\\xF8res med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://jestjs.io\"\n  }, \"Jest\"), \", og linting med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eslint.org\"\n  }, \"ESLint\"), \" og \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stylelint.io\"\n  }, \"Stylelint\"), \". Til slutt gj\\xF8r testscriptet en typesjekk med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.typescriptlang.org/tsconfig/#noEmit\"\n  }, \"TypeScript\"), \".\"), mdx(\"h3\", null, \"Lag en commit\"), mdx(\"p\", null, \"I J\\xF8kul bruker vi \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/commitizen/cz-cli\"\n  }, \"Commitizen\"), \" for \\xE5 f\\xE5 strukturerte commitmeldinger i et spesielt format, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.conventionalcommits.org/en/v1.0.0/\"\n  }, \"Conventional Commits\"), \". Formatet bruker vi senere for \\xE5 automatisk beregne riktig versjonsnummer n\\xE5r endringen skal publiseres, og for \\xE5 legge til commitmeldingene i pakkens changelog.\"), mdx(\"p\", null, \"Vi har en egen kommando, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"yarn commit\"), \", som tar deg gjennom en veiviser, s\\xE5nn at du slipper \\xE5 tenke p\\xE5 formatering.\"), mdx(\"p\", null, \"F\\xF8r commiten lages kj\\xF8res det et par kommandoer i en precommit-hook, satt opp med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/typicode/husky\"\n  }, \"Husky\"), \" og \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/okonet/lint-staged\"\n  }, \"lint-staged\"), \". Hooken kj\\xF8rer \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://commitlint.js.org/\"\n  }, \"Commitlint\"), \" og \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://prettier.io\"\n  }, \"Prettier\"), \", i tillegg til \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eslint.org\"\n  }, \"ESLint\"), \" og \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stylelint.io\"\n  }, \"Stylelint\"), \" med \\\"auto-fix\\\" skrudd p\\xE5. Dette er en ekstra liten sikkerhetssjekk, og s\\xF8rger for at all koden i J\\xF8kul f\\xF8lger det samme formatet uten at utviklere trenger \\xE5 tenke noe p\\xE5 det.\"), mdx(\"h2\", null, \"Hva skjer under en pull request?\"), mdx(\"p\", null, \"Pull requests sjekkes av en \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/blob/main/.github/workflows/pull_request.yml\"\n  }, \"workflow p\\xE5 GitHub Actions\"), \". Den gj\\xF8r en hel del ting i bakgrunnen for \\xE5 sikre at det ikke har skjedd noe uventet.\"), mdx(\"p\", null, \"Workflowen gj\\xF8r en rask sjekk for \\xE5 se om det er endret noen filer som gj\\xF8r at vi trenger en grundig sjekk. Hvis det for eksempel bare er endret litt p\\xE5 en tekst i en Readme-fil s\\xE5 trenger vi ikke kj\\xF8re alle mulige slags tester.\"), mdx(\"p\", null, \"I eksempelet v\\xE5rt gj\\xF8r vi endring i TypeScript, s\\xE5 da blir det \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"full pakke\"), \" \\uD83C\\uDF55\"), mdx(\"h3\", null, \"Actions bygger\"), mdx(\"p\", null, \"Actions bygger pakkene med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://turborepo.org\"\n  }, \"Turborepo\"), \" p\\xE5 samme m\\xE5te som p\\xE5 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"localhost\"), \". S\\xE5 bygger den portalen.\"), mdx(\"p\", null, \"Portalen er laget med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.gatsbyjs.com\"\n  }, \"Gatsby\"), \" for \\xE5 kunne bruke React-komponentene fra J\\xF8kul for \\xE5 bygge statiske nettsider. Innholdet kommer for det meste fra \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".mdx\"), \"-filer rundtomkring, som er Markdown med React-st\\xF8tte.\"), mdx(\"h3\", null, \"Actions tester\"), mdx(\"p\", null, \"Actions kj\\xF8rer de samme testene som vi gjorde lokalt, men i tillegg kj\\xF8res visuelle regresjonstester med \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.cypress.io\"\n  }, \"Cypress\"), \". Cypress-testene fordeles i en matrise med fem \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"runners\"), \". Hver runner kj\\xF8rer en versjon av portalen som nettop ble bygget.\"), mdx(\"p\", null, \"For hver test tar Cypress et skjermbilde og sammenligner med et skjermbilde som ligger i Git. P\\xE5 den m\\xE5ten fanger vi opp uforventede endringer.\"), mdx(\"h3\", null, \"Actions forh\\xE5ndsviser\"), mdx(\"p\", null, \"Til slutt bygger Actions ogs\\xE5 en versjon av portalen med en annen URL, og denne publiseres p\\xE5 \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://pages.github.com\"\n  }, \"GitHub Pages\"), \" som et slags \\\"staging-milj\\xF8\\\" s\\xE5 vi kan forh\\xE5ndsvise endringer.\"), mdx(\"p\", null, \"Hvis alle automatiske tester g\\xE5r OK og du f\\xE5r en godkjent review av en kollega er det klart for \\xE5 merge.\"), mdx(\"h2\", null, \"Automatisert publisering\"), mdx(\"p\", null, \"N\\xE5r en pull request merges er det \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/blob/main/.github/workflows/release.yml\"\n  }, \"release-workflowen\"), \" som tar over. Det er her \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/lerna/lerna\"\n  }, \"Lerna\"), \" kommer inn og sjekker Git-historikken sammenlignet med forrige publisering. Hele denne workflowen g\\xE5r uten at et menneske er involvert \\uD83E\\uDD16\"), mdx(\"h3\", null, \"Versjonering\"), mdx(\"p\", null, \"Lerna leser \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.conventionalcommits.org/en/v1.0.0/\"\n  }, \"commitmeldinger\"), \" for \\xE5 se om det skal publiseres en ny \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://semver.org\"\n  }, \"SemVer\"), \" \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"patch\"), \", \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"minor\"), \", eller \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"major\"), \". For eksempel:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"BREAKING CHANGE:\"), \" blir til en major\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"feat:\"), \" blir til en minor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"fix:\"), \" blir til en patch\")), mdx(\"p\", null, \"Det kan v\\xE6re mange commits som samles inn i samme release, og Lerna er smart nok til \\xE5 velge rett versjon fra samlingen. For eksempel vil en \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fix\"), \" pluss en \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"BREAKING CHANGE\"), \" totalt sett bli \\xE9n major-versjon, ikke f\\xF8rst en patch og s\\xE5 en major.\"), mdx(\"p\", null, \"N\\xE5r Lerna har beregnet ferdig oppdaterer den alle \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" i repoet med de nye versjonsnummerene. Lerna samler ogs\\xE5 alle commitmeldinger og putter dem i pakkenes changelogs.\"), mdx(\"h3\", null, \"Publisering\"), mdx(\"p\", null, \"Ved publisering bygger Actions pakkene p\\xE5 samme m\\xE5te som f\\xF8r, med Turborepo. Deretter publiserer Lerna de nye pakkene til \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.npmjs.com/search?q=keywords%3Afremtind\"\n  }, \"NPM\"), \" og \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/orgs/fremtind/packages?repo_name=jokul\"\n  }, \"GitHub Packages\"), \".\"), mdx(\"p\", null, \"Til slutt bygger Actions en ny versjon av portalen som publiseres til GitHub Pages.\"), mdx(\"p\", null, \"N\\xE5 er alt klart til \\xE5 brukes! \\uD83C\\uDF89\"), mdx(\"h2\", null, \"Sp\\xF8rsm\\xE5l som ble stilt\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Hvorfor er det delt i to pakker, en for CSS og en for React?\")), mdx(\"p\", null, \"Det gir en st\\xF8rre fleksibilitet. Ikke alle kan bruke React, og om f. eks. React-koden gj\\xF8r \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"import \\\"./styles.scss\\\"\"), \" for \\xE5 f\\xE5 stiler ville det lagt ganske kraftige f\\xF8ringer for hvilke byggverkt\\xF8y som brukes ute i teamene.\"), mdx(\"h2\", null, \"Veien videre\"), mdx(\"p\", null, \"Vi unders\\xF8ker for tiden alternativer til Lerna, siden det dessverre ikke vedlikeholdes og holder oss p\\xE5 Yarn Classic. Du kan f\\xF8lge \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/fremtind/jokul/discussions/2626\"\n  }, \"diskusjonen p\\xE5 GitHub\"), \" om du vil se mer om alternativene og veien videre.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Infrastrukturen til JÃ¸kul","react":null,"scss":null,"order":null,"author":"William Killerud","publishDate":"2022.03.09","group":null}}},"pageContext":{"id":"0a25fa99-f173-5696-80ec-f685cb4bf862","title":"Infrastrukturen til JÃ¸kul"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}