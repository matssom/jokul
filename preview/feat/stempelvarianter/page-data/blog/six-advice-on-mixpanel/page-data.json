{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/blog/six-advice-on-mixpanel/",
    "result": {"data":{"page":{"id":"0d60c2ef-bb5b-58d1-873c-70bed76dc446","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"6 Advice on Mixpanel Integration\",\n  \"author\": \"Sercan Leylek\",\n  \"description\": \"Tips for teams which will include Mixpanel to their web applications.\",\n  \"publishDate\": \"2022.03.12\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Mixpanel is a business analytics service which tracks user interactions on web and mobile applications. Integrating a tracking analytics tool with an application may seem like a simple task, but this story recommends to review your plan once more.\"), mdx(\"p\", null, \"User analytics is one of the most fundamental features that every popular web application should perform.\\nWithout collecting data about user activities, one can never be sure of the user experience.\\nThe developer team will invest days on some functionality, but unless they know how many users use this precious feature,\\nthey will only guess and hope that the users are benefiting from it.\\nIn other words, \\u201CWithout data you\\u2019re just another person with an opinion.\\u201D W. Edwards Deming.\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/assets/blog/quote-edwards-deming-data-opinion.jpg\",\n    \"alt\": null\n  })), mdx(\"p\", null, mdx(\"a\", {\n    href: \"https://www.pinterest.com/pin/760123243333129174/\"\n  }, \"via Pinterest\")), mdx(\"p\", null, \"To clarify the ambiguity, my production team of \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://meldeskade.no\"\n  }, \"https://meldeskade.no/\"), \" decided to use popular business analytics tool, \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://mixpanel.com/\"\n  }, \"Mixpanel\"), \".\\nOur single page web application is built with ReactJS, uses J\\xF8kul Design System and hundreds of users visit the website\\nto report their insurance activities every day.\\nIn short, meldeskade.no is a typical SPA which promises the user to follow a set of operations\\nunder some sections and complete the user request somewhere along the way.\"), mdx(\"p\", null, \"From the perspective of a front-end developer, I thought including Mixpanel tracking would be a simple task. However, as our team gained more and more experience in the field, I started to realize the obstacles. We followed the path of \\u2018learning by doing\\u2019 and eventually, our Mixpanel tracking started to deliver us data. So, this article will help to those who are in the beginning of their Mixpanel journey and looking for some useful advice.\"), mdx(\"h3\", null, \"#1 Don\\u2019t underestimate the integration work\"), mdx(\"p\", null, \"Know your enemy first! Adding Mixpanel to your web application is an integration process and system integration is maybe the most problematic fields in information technology. Because linking different systems increases the complexity. Although the relationship between a web application and Mixpanel is a one-way road, the integration will still be painful, and it has the potential to produce unforeseen errors.\"), mdx(\"p\", null, \"For instance, if you perform some tracking event before initializing the Mixpanel with the code below, application will have a fatal error and whole website will be down for the user. This error can seem obvious, but one exceptional case for some users might be the end of the show. Therefore, do not underestimate the complexity of integration process.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"import { MixpanelUtils } from './MixpanelUtils';\\n...\\nMixpanelUtils.Init();\\n\")), mdx(\"h3\", null, \"#2 Document every tracking operation first, code later\"), mdx(\"p\", null, \"Teamwork is required in order to integrate a web application with Mixpanel. Naturally, a web developer cannot sit alone and write all the tracking operations on their own for a large system. Product owner, architect, tester, and tech lead should give their consent on what user activities will be tracked besides developers. Since people from different roles are involved in the process, it is important to keep decisions in one open document.\"), mdx(\"p\", null, \"The team of meldeskade.no created a table which lists all tracking events. We included many columns for every event such as definition, trigger case for the tracking, its parameters, development status and we even wrote down the JIRA ticket for each tracking. This strategy helped the team solve the complexity of the problem.\"), mdx(\"p\", null, \"Besides, we still keep this document active. Whenever the team needs to implement a new Mixpanel tracking, we start the work by documenting. So, document first, code later.\"), mdx(\"h3\", null, \"#3 Don\\u2019t try to track too many events on first deployment\"), mdx(\"p\", null, \"Since our team underestimated the complexity of adding Mixpanel to our website, we set an ambitious goal for our delivery. We tried to implement at least 10 different tracking operations in one go. However, you should also implement configuration code for Mixpanel. These are OptInTracking, alias, identify, getting cookie consent of the user, etc. This is the threshold that one team should initially come over to reach for tracking events. When a team wraps all of these in a single deployment, the development work grows much more than expected. Therefore, the goal on first deployment should be a successful configuration of Mixpanel, and a couple of meaningful tracking operations.\"), mdx(\"h3\", null, \"#4 Surprise! Surprise! You need a backend developer :)\"), mdx(\"p\", null, \"This is a point that our team failed to foresee. We basically thought we had all the data out there. We should only write some well-organized tracking operations in JS and everything will go smoothly. However, the data flow of a web application is not like what you see on a webpage as a human being. For example, you want to track some category data after the user clicks a section, but the component that you are triggering the event from may not contain the category information as a prop. Therefore, you need to ask the backend developer to provide this additional data via corresponding API call.\"), mdx(\"p\", null, \"This tip is very much related to the advice #2. If the developers communicate about where and how to obtain the data attributes in the documentation, the process will go simultaneous and smooth.\"), mdx(\"h3\", null, \"#5 You will discover defects along the way\"), mdx(\"p\", null, \"This might be one of the greatest paybacks for all the effort performed to reach the goal. As you implement more tracking on different components of a React application, you will discover some defects that have been omitted by you and other fellow front-end developers. React redundant rendering problems are known, but mostly ignored defects. And they are not easily discovered by tester, neither they truly create some run time error, but they are there. While adding more tracking operations, you will clearly see those mistakes and you will have the opportunity to fix them with some refactoring process. This practice will increase the performance of the application.\"), mdx(\"h3\", null, \"#6 GDPR is everyone\\u2019s responsibility. Speak up when in doubt.\"), mdx(\"p\", null, \"Every team member should be observant on potential GDPR violation. More data does not help to understand user interaction better, but key data does. Users\\u2019 private data does not play any role while measuring the efficiency of an application. Therefore, speak up when you are in doubt of some data that your team is about to collect.\"), mdx(\"p\", null, \"(This article was previously published on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://storksnestblog.wordpress.com/2022/03/12/6-advice-on-mixpanel-integration%ef%bf%bc/\"\n  }, \"Stork's Nest\"), \")\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"6 Advice on Mixpanel Integration","react":null,"scss":null,"order":null,"author":"Sercan Leylek","publishDate":"2022.03.12","group":null}}},"pageContext":{"id":"0d60c2ef-bb5b-58d1-873c-70bed76dc446","title":"6 Advice on Mixpanel Integration"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}