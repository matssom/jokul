{
    "componentChunkName": "component---src-templates-doc-page-layout-tsx",
    "path": "/komponenter/image",
    "result": {"data":{"page":{"id":"23694f7d-2f50-564a-92a2-a489794e1a11","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Image\",\n  \"react\": \"image-react\",\n  \"scss\": \"image\",\n  \"group\": \"annet\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Ingress = makeShortcode(\"Ingress\");\nvar ComponentExample = makeShortcode(\"ComponentExample\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Ingress, {\n    mdxType: \"Ingress\"\n  }, \"Bildekomponenten viser et bilde i riktig oppl\\xF8sning ut fra st\\xF8rrelsen det vises i p\\xE5 skjermen, og kan vise en lavoppl\\xF8selig forh\\xE5ndsvisning under innlasting av store bilder.\"), mdx(ComponentExample, {\n    title: \"Image\",\n    knobs: {\n      choiceProps: choiceProps\n    },\n    component: ImageExample,\n    codeExample: imageExampleCode,\n    mdxType: \"ComponentExample\"\n  }), mdx(\"h2\", null, \"Bruk\"), mdx(\"p\", null, \"Forh\\xE5ndsvisningen, eller \", mdx(\"i\", {\n    lang: \"en\"\n  }, \"thumbnail\"), \", vil vises uskarpt f\\xF8rst, og animeres til et skarpt fullst\\xF8rrelse bilde n\\xE5r det er lastet ferdig.\"), mdx(\"p\", null, \"For \\xE5 f\\xE5 mest ut av denne komponenten m\\xE5 du sende inn et \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/srcset\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"srcSet\")), \", alts\\xE5 en liste over bilder i forskjellig oppl\\xF8sning sammen med informasjon om bildenes bredde. Dette brukes av nettleseren for \\xE5 laste ned riktig bilde i forhold til st\\xF8rrelse og skjermoppl\\xF8sning. Du kan generere dette automatisk, f.eks. ved hjelp av \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/dazuaz/responsive-loader\"\n  }, \"responsive-loader\"), \" for Webpack, eller sette det sammen manuelt.\"), mdx(\"p\", null, \"Det er ogs\\xE5 mulig \\xE5 sende inn kun ett enkelt bilde som kilde. I s\\xE5 fall lastes bildet inn p\\xE5 vanlig m\\xE5te, uten forh\\xE5ndsvisning.\"), mdx(\"h2\", null, \"Retningslinjer for bildest\\xF8rrelser\"), mdx(\"p\", null, \"Det er viktig at forh\\xE5ndsvisningen er \", mdx(\"em\", null, \"betydelig\"), \" mindre enn fullst\\xF8rrelse. Poenget med \\xE5 gi en bedre forh\\xE5ndsvisning p\\xE5 trege forbindelser faller helt bort om brukeren ogs\\xE5 m\\xE5 vente p\\xE5 \\xE5 laste ned forh\\xE5ndsvisningen! Det er forventet at forh\\xE5ndsvisningen er s\\xE5 liten at det er umulig \\xE5 se detaljer.\"), mdx(\"h3\", null, \"Forh\\xE5ndsvisning\"), mdx(\"p\", null, \"Forh\\xE5ndsvisningen b\\xF8r ikke v\\xE6re mer enn ca. 50 piksler bred, og ikke mer enn 2-5 kB i filst\\xF8rrelse.\"), mdx(\"h3\", null, \"Responsive bildest\\xF8rrelser\"), mdx(\"p\", null, \"Den laveste opppl\\xF8sningen b\\xF8r fungere fint p\\xE5 mobiltelefoner uten \\xE5 v\\xE6re for stor. 400 piksler er en god minstest\\xF8rrelse. Den st\\xF8rste oppl\\xF8sningen b\\xF8r v\\xE6re det dobbelte av den st\\xF8rste bredden bildet kan ha, for \\xE5 im\\xF8tekomme skjermer med retina-oppl\\xF8sning. Du trenger imidlertid ikke lage bilder med noe s\\xE6rlig mer enn 1920px bredde, ellers blir filst\\xF8rrelsen for veldig stor!\"), mdx(\"h3\", null, \"Filformater\"), mdx(\"p\", null, \"Bruk gjerne moderne bildeformater som \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://en.wikipedia.org/wiki/WebP\"\n  }, \"WebP\"), \"! Disse tar gjerne mindre plass for tilsvarende st\\xF8rrelse enn tradisjonelle formater som jpg, og st\\xF8ttes av alle nettlesere vi har st\\xF8tte for i J\\xF8kul. Ikke bruk png for fotografier, kun for grafiske fremstillinger.\"), mdx(\"h2\", null, \"N\\xE5r bruker vi bildekomponenten?\"), mdx(\"p\", null, \"Dette er ment som et hjelpeverkt\\xF8y hovedsakelig til dekorative bilder. Det er ikke meningen at vi skal animere inn \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/preview/feat/skeleton-loader/komponenter/icons\"\n  }, \"ikoner\"), \" p\\xE5 denne m\\xE5ten, for eksempel.\"), mdx(\"p\", null, \"Dersom utvikleren allerede har liknende hjelpemidler, \", mdx(\"a\", {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-image/\",\n    className: \"jkl-link jkl-link--external\"\n  }, \"for eksempel i Gatsby\"), \", trenger de ikke bruke denne komponenten.\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Image","react":"image-react","scss":"image","order":null,"author":null,"publishDate":null,"group":"annet"}}},"pageContext":{"id":"23694f7d-2f50-564a-92a2-a489794e1a11","title":"Image"}},
    "staticQueryHashes": ["1583095916","1756004727","2550854682","3000541721"]}